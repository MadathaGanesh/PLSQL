-- EXPLICIT CURSOR
SELECT * FROM EMPLOYEES;


-- Fetching Data without using LOOPS
DECLARE
CURSOR EMPLOYEES_CURSOR IS (SELECT EMPID,EMP_NAME,SALARY,ADDRESS,MOBILE FROM EMPLOYEES);  -- Declaring a cursor
-- Using "%TYPE" TO STORE SINGLE VALUES INDIVIDUALLY.
VAR_EMPID       EMPLOYEES.EMPID%TYPE;
VAR_EMPNAME     EMPLOYEES.EMP_NAME%TYPE;
VAR_SALARY      EMPLOYEES.SALARY%TYPE;
VAR_ADDRESS     EMPLOYEES.ADDRESS%TYPE;
VAR_MOBILE      EMPLOYEES.MOBILE%TYPE;
BEGIN
    DBMS_OUTPUT.PUT_LINE('Fetching data using Explicit Cursor using %TYPE without using LOOP, Just Fetching data one row after another row');
    DBMS_OUTPUT.PUT_LINE('Fetching First Row Data without using LOOP');
    OPEN EMPLOYEES_CURSOR;   -- Open cursor 
    FETCH EMPLOYEES_CURSOR INTO VAR_EMPID,VAR_EMPNAME,VAR_SALARY,VAR_ADDRESS,VAR_MOBILE;   -- Fetching data into these cursor
    DBMS_OUTPUT.PUT_LINE('EMP ID IS : ' || VAR_EMPID || ' EMP NAME IS :  ' || VAR_EMPNAME || ' .SALARY IS: ' || VAR_SALARY || ' .ADDRESS IS : ' || VAR_ADDRESS);
    
    DBMS_OUTPUT.PUT_LINE('Fetching Second Row Data without using LOOP');
    FETCH EMPLOYEES_CURSOR INTO VAR_EMPID,VAR_EMPNAME,VAR_SALARY,VAR_ADDRESS,VAR_MOBILE;   -- Fetching data into these cursor
    DBMS_OUTPUT.PUT_LINE('EMP ID IS : ' || VAR_EMPID || ' EMP NAME IS :  ' || VAR_EMPNAME || ' .SALARY IS: ' || VAR_SALARY || ' .ADDRESS IS : ' || VAR_ADDRESS);
    
    DBMS_OUTPUT.PUT_LINE('Fetching Third Row Data without using LOOP');
    FETCH EMPLOYEES_CURSOR INTO VAR_EMPID,VAR_EMPNAME,VAR_SALARY,VAR_ADDRESS,VAR_MOBILE;   -- Fetching data into these cursor
    DBMS_OUTPUT.PUT_LINE('EMP ID IS : ' || VAR_EMPID || ' EMP NAME IS :  ' || VAR_EMPNAME || ' .SALARY IS: ' || VAR_SALARY || ' .ADDRESS IS : ' || VAR_ADDRESS);
    CLOSE EMPLOYEES_CURSOR;  -- Closing cursor
END;
/


-- %ROWTYPE is an attribute that allows declaring a record (a composite variable) with the same structure as a row in a database table or cursor.
DECLARE 
    CURSOR CURSOR_EMPLOYEES_ROWTYPE IS (SELECT * FROM EMPLOYEES);
    VAR_EMPLOYEES_ROWTYPE           EMPLOYEES%ROWTYPE;
BEGIN
    DBMS_OUTPUT.PUT_LINE('Fetching data using Explicit Cursor using %ROWTYPE  without using "LOOP" , Just Fetching data one row after another row');
    OPEN CURSOR_EMPLOYEES_ROWTYPE;
    
    DBMS_OUTPUT.PUT_LINE('Fetching First Row Data :  ');
    FETCH CURSOR_EMPLOYEES_ROWTYPE INTO VAR_EMPLOYEES_ROWTYPE ;
    DBMS_OUTPUT.PUT_LINE('EMP ID IS : ' || VAR_EMPLOYEES_ROWTYPE.EMPID  || ' EMP NAME IS :  ' || VAR_EMPLOYEES_ROWTYPE.EMP_NAME || ' SALARY IS: ' || VAR_EMPLOYEES_ROWTYPE.SALARY || ' .ADDRESS IS : ' || VAR_EMPLOYEES_ROWTYPE.ADDRESS);
    FETCH CURSOR_EMPLOYEES_ROWTYPE INTO VAR_EMPLOYEES_ROWTYPE;
    
    DBMS_OUTPUT.PUT_LINE('Fetching Second Row Data :  ');
    DBMS_OUTPUT.PUT_LINE('EMP ID IS : ' || VAR_EMPLOYEES_ROWTYPE.EMPID  || ' EMP NAME IS :  ' || VAR_EMPLOYEES_ROWTYPE.EMP_NAME || ' SALARY IS: ' || VAR_EMPLOYEES_ROWTYPE.SALARY || ' .ADDRESS IS : ' || VAR_EMPLOYEES_ROWTYPE.ADDRESS);
    CLOSE CURSOR_EMPLOYEES_ROWTYPE;
END;
/


-- Fetching Data without Loop and and "NOTFOUND" Attribute.
DECLARE
CURSOR EMP_CURSOR_3 IS SELECT * FROM EMPLOYEES;
VAR_EMP_NAME    EMPLOYEES%ROWTYPE;
BEGIN
    OPEN EMP_CURSOR_3;
        FETCH EMP_CURSOR_3 INTO VAR_EMP_NAME;
        IF EMP_CURSOR_3%FOUND THEN
            DBMS_OUTPUT.PUT_LINE('Fetching First Row Data..');
            DBMS_OUTPUT.PUT_LINE('EMP ID IS : ' || VAR_EMP_NAME.EMP_NAME  || ' .EMP ID IS : ' || VAR_EMP_NAME.EMPID || ' .MOBILE IS : ' || VAR_EMP_NAME.MOBILE);
        ELSE 
            DBMS_OUTPUT.PUT_LINE('No Data FOund after first row');
        END IF;
        
        FETCH EMP_CURSOR_3 INTO VAR_EMP_NAME;
        IF EMP_CURSOR_3%FOUND THEN
            DBMS_OUTPUT.PUT_LINE('Fetching Second Row Data..');
            DBMS_OUTPUT.PUT_LINE('EMP ID IS : ' || VAR_EMP_NAME.EMP_NAME  || ' .EMP ID IS : ' || VAR_EMP_NAME.EMPID || ' .MOBILE IS : ' || VAR_EMP_NAME.MOBILE);
        ELSE
            DBMS_OUTPUT.PUT_LINE('No data found after second row');
        END IF;
    CLOSE EMP_CURSOR_3;
END;
/




-- Fetching Data with LOOPS and "%TYPE"
DECLARE
CURSOR LOOP_CURSOR_TYPE IS SELECT * FROM EMPLOYEES;
VAR_EMPID3       EMPLOYEES.EMPID%TYPE;
VAR_EMPNAME3     EMPLOYEES.EMP_NAME%TYPE;
VAR_SALARY3      EMPLOYEES.SALARY%TYPE;
VAR_ADDRESS3     EMPLOYEES.ADDRESS%TYPE;
VAR_MOBILE3      EMPLOYEES.MOBILE%TYPE;
BEGIN
    DBMS_OUTPUT.PUT_LINE('Fetching Data using Explicit Cursor and Loops and %TYPE');
    OPEN LOOP_CURSOR_TYPE;
    LOOP
    FETCH LOOP_CURSOR_TYPE INTO VAR_EMPID3, VAR_EMPNAME3, VAR_SALARY3, VAR_ADDRESS3, VAR_MOBILE3;
    EXIT WHEN LOOP_CURSOR_TYPE%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE('EMP ID is : ' ||  VAR_EMPID3 || 'EMP NAME IS : ' || VAR_EMPNAME3 ||
        'SALARY IS : ' || VAR_SALARY3 || 'ADDRESS IS : ' || VAR_ADDRESS3 || 'MOBILE IS : ' || VAR_MOBILE3);
    END LOOP;
    CLOSE LOOP_CURSOR_TYPE;
END;
/



-- Fetching data using LOOP and %ROWTYPE
SET SERVEROUTPUT ON;
DECLARE
    VAR_EMP_ROW_TYPE  EMPLOYEES%ROWTYPE;
    CURSOR EMP_ROW_TYPE_CURSOR IS SELECT * FROM EMPLOYEES ORDER BY EMPID DESC;
BEGIN
    OPEN EMP_ROW_TYPE_CURSOR;
    DBMS_OUTPUT.PUT_LINE('Fetching Data using LOOP and %ROWTYPE ..... .:');
    LOOP
    FETCH EMP_ROW_TYPE_CURSOR INTO VAR_EMP_ROW_TYPE;
    EXIT WHEN EMP_ROW_TYPE_CURSOR%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE('EMP ID IS : ' || VAR_EMP_ROW_TYPE.EMPID || ' EMP NAME IS : ' || VAR_EMP_ROW_TYPE.EMP_NAME 
    || ' SALARY IS : ' || VAR_EMP_ROW_TYPE.SALARY || ' ADDRESS IS : ' || VAR_EMP_ROW_TYPE.ADDRESS || 
    ' MOBILE NUMBER IS : ' || VAR_EMP_ROW_TYPE.MOBILE
    );
    END LOOP;
END;
/


