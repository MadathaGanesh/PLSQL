-- Advanced Packages



--Using Transactions in Packages
-- Write a package with a procedure that updates an employeeâ€™s salary based on their EMPID. Ensure the procedure handles transactions by committing 
-- the change if successful and rolling back if there is any issue (e.g., invalid EMPID
SET SERVEROUTPUT ON;
CREATE OR REPLACE PACKAGE PKG_UPDATE_SALARY IS
    PROCEDURE UPDATE_SALARY_BY_EMPID(P_EMP_ID IN PACKAGE_EMPLOYEES.EMPID%TYPE,P_NEW_SALARY IN NUMBER);
END;
/
CREATE OR REPLACE PACKAGE BODY PKG_UPDATE_SALARY IS
    PROCEDURE UPDATE_SALARY_BY_EMPID(P_EMP_ID IN PACKAGE_EMPLOYEES.EMPID%TYPE, P_NEW_SALARY IN NUMBER) IS
    BEGIN
        UPDATE PACKAGE_EMPLOYEES SET SALARY=P_NEW_SALARY WHERE EMPID=P_EMP_ID;
        
        IF SQL%ROWCOUNT=0 THEN
            RAISE_APPLICATION_ERROR(20001,'An Unexpected Error Occured ! ');
        ELSE
            DBMS_OUTPUT.PUT_LINE('SALARY UPDATED FOR EMP ID : ' || P_EMP_ID || ' . NEWLY UPDATED SALARY IS : ' || P_NEW_SALARY );
        END IF;
    END;
END;
/

BEGIN
        PKG_UPDATE_SALARY.UPDATE_SALARY_BY_EMPID(101,79000);
END;
/




-- Complex Query with Join
-- Create a package that contains a cursor to fetch employee details (including EMP_NAME and SALARY) and
--department details (including DEPT_NAME) by joining the EMPLOYEES and DEPT tables on DEPTNO. Write a procedure that 
--fetches and displays the results for all employees and their department names.

CREATE OR REPLACE PACKAGE PKG_GET_DEPT_EMP_DETAILS IS
PROCEDURE GET_DEPT_EMP_DETAILS;
END;
/

CREATE OR REPLACE PACKAGE BODY PKG_GET_DEPT_EMP_DETAILS IS
CURSOR CUR_EMP_DEPT IS SELECT EMPID,EMP_NAME,SALARY,EMP.DEPTNO,DEPT_NAME,LOCATION FROM PACKAGE_EMPLOYEES EMP 
INNER JOIN PACKAGE_DEPT DEPT ON EMP.DEPTNO=DEPT.DEPTNO;
PROCEDURE GET_DEPT_EMP_DETAILS IS
BEGIN
    FOR ITER in CUR_EMP_DEPT
    LOOP
        DBMS_OUTPUT.PUT_LINE('EMP ID IS : '||  ITER.EMPID || ' .EMP NAME IS : ' || ITER.EMP_NAME || 
        ' .SALARY IS : ' || ITER.SALARY || ' .DEPTNO IS : '|| ITER.DEPTNO || ' .DEPT_NAME IS : ' || ITER.DEPT_NAME || ' .LOCATION IS : '||ITER.LOCATION  );
    END LOOP;
END; 
END;
/

BEGIN
PKG_GET_DEPT_EMP_DETAILS.GET_DEPT_EMP_DETAILS;
END;
/


SELECT * FROM PACKAGE_DEPT;
SELECT * FROM PACKAGE_EMPLOYEES;
-- Procedure with Function Call
-- Write a package with a procedure that fetches all employees from a department and displays their names. 
--Also, include a function that returns the total salary for employees in that department. The procedure should call the function to display the total salary along with the individual salaries.
CREATE OR REPLACE PACKAGE GET_TOTAL_SALARY IS 
FUNCTION GET_TOTAL_SALARY_BY_DEPTID(P_DEPTID IN PACKAGE_DEPT.DEPTNO%TYPE) RETURN NUMBER;
PROCEDURE GET_EMP_DETAILS(P_DEPTID IN PACKAGE_DEPT.DEPTNO%TYPE);
END;
/

CREATE OR REPLACE PACKAGE BODY GET_TOTAL_SALARY IS
VAR_TOTAL_SALARY_BY_DEPT  NUMBER;
FUNCTION GET_TOTAL_SALARY_BY_DEPTID(P_DEPTID IN PACKAGE_DEPT.DEPTNO%TYPE)
    RETURN NUMBER IS 
    BEGIN
        SELECT SUM(SALARY) INTO VAR_TOTAL_SALARY_BY_DEPT FROM PACKAGE_EMPLOYEES 
        WHERE DEPTNO=P_DEPTID;
        RETURN NVL(VAR_TOTAL_SALARY_BY_DEPT,0);  -- If there is no Department with that DEPTID then it will return zero (0).
    END;

PROCEDURE GET_EMP_DETAILS(P_DEPTID IN PACKAGE_DEPT.DEPTNO%TYPE) IS
CURSOR CUR_DEPT_EMP IS SELECT EMP.EMP_NAME,EMP.SALARY,DEPT.DEPTNO,DEPT.DEPT_NAME FROM PACKAGE_EMPLOYEES EMP ,PACKAGE_DEPT DEPT WHERE EMP.DEPTNO=P_DEPTID;
VAR_EMPNAME         PACKAGE_EMPLOYEES.EMP_NAME%TYPE;
VAR_SALARY          PACKAGE_EMPLOYEES.SALARY%TYPE;
VAR_DEPTNO          PACKAGE_EMPLOYEES.DEPTNO%TYPE;
VAR_DEPTNAME        PACKAGE_DEPT.DEPT_NAME%TYPE;
VAR_TOTAL_SALARY            NUMBER;

BEGIN

    VAR_TOTAL_SALARY :=GET_TOTAL_SALARY_BY_DEPTID(P_DEPTID); 
    OPEN CUR_DEPT_EMP;
    LOOP
    FETCH CUR_DEPT_EMP INTO VAR_EMPNAME,VAR_SALARY,VAR_DEPTNO,VAR_DEPTNAME;
    EXIT WHEN CUR_DEPT_EMP%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE('NAME IS : '|| VAR_EMPNAME || ' .SALARY IS : '|| VAR_SALARY || ' .DEPTNO IS : .'|| VAR_DEPTNO || ' .DEPT NAME IS : '|| VAR_DEPTNAME  );
    END LOOP;
    DBMS_OUTPUT.PUT_LINE('TOTAL SALARY FOR DEPT ' || P_DEPTID || ' IS : ' || VAR_TOTAL_SALARY);
    CLOSE CUR_DEPT_EMP;
END;
END;
/

BEGIN
GET_TOTAL_SALARY.GET_EMP_DETAILS(1056);
END;
/


