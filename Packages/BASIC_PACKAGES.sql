-- Packages

CREATE TABLE PACKAGE_EMPLOYEES (
    EMPID INT PRIMARY KEY,
    EMP_NAME VARCHAR2(100),
    SALARY NUMBER(10, 2),
    DEPTNO INT
);

-- Create PACKAGE_DEPT Table
CREATE TABLE PACKAGE_DEPT (
    DEPTNO INT PRIMARY KEY,
    DEPT_NAME VARCHAR2(50),
    LOCATION VARCHAR2(50)
);

-- Insert Sample Data into EMPLOYEES Table
INSERT INTO PACKAGE_EMPLOYEES (EMPID, EMP_NAME, SALARY, DEPTNO) VALUES (101, 'John Doe', 50000, 10);
INSERT INTO PACKAGE_EMPLOYEES (EMPID, EMP_NAME, SALARY, DEPTNO) VALUES (102, 'Jane Smith', 60000, 20);
INSERT INTO PACKAGE_EMPLOYEES (EMPID, EMP_NAME, SALARY, DEPTNO) VALUES (103, 'Robert Brown', 55000, 10);
INSERT INTO PACKAGE_EMPLOYEES (EMPID, EMP_NAME, SALARY, DEPTNO) VALUES (104, 'Emily Davis', 62000, 30);
INSERT INTO PACKAGE_EMPLOYEES (EMPID, EMP_NAME, SALARY, DEPTNO) VALUES (105, 'Michael Lee', 58000, 20);

-- Insert Sample Data into DEPT Table
INSERT INTO PACKAGE_DEPT (DEPTNO, DEPT_NAME, LOCATION) VALUES (10, 'HR', 'New York');
INSERT INTO PACKAGE_DEPT (DEPTNO, DEPT_NAME, LOCATION) VALUES (20, 'Finance', 'Chicago');
INSERT INTO PACKAGE_DEPT (DEPTNO, DEPT_NAME, LOCATION) VALUES (30, 'Marketing', 'San Francisco');



-- 1. Write a package with a cursor to fetch EMPID, employee names and salaries 
-- from the EMPLOYEES table.Create a procedure to open the cursor, 
--fetch one record at a time, and display the employee name and salary.
SET SERVEROUTPUT ON;
CREATE OR REPLACE PACKAGE PKG_GET_EMP_DETAILS IS
    CURSOR EMP_CURSOR_DETAILS IS SELECT EMPID,EMP_NAME,SALARY FROM PACKAGE_EMPLOYEES;
    PROCEDURE GET_DETAILS;
END;
/

CREATE OR REPLACE PACKAGE BODY PKG_GET_EMP_DETAILS IS
    V_EMPID         PACKAGE_EMPLOYEES.EMPID%TYPE;
    V_EMPNAME       PACKAGE_EMPLOYEES.EMP_NAME%TYPE;
    V_SALARY        PACKAGE_EMPLOYEES.SALARY%TYPE;
    PROCEDURE GET_DETAILS IS 
    BEGIN
    OPEN EMP_CURSOR_DETAILS;
        LOOP
            FETCH EMP_CURSOR_DETAILS INTO V_EMPID,V_EMPNAME,V_SALARY;
            EXIT WHEN EMP_CURSOR_DETAILS%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE('EMP ID IS : ' || V_EMPID || ' .EMP NAME IS : ' || V_EMPNAME || ' .SALARY IS : ' || V_SALARY);
        END LOOP;
    CLOSE EMP_CURSOR_DETAILS;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('NO EMPLOYEES DATA FOUND BUDDY !!');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An UnExpected Error Occured ! ' || SQLERRM);
    END;
END;
/

BEGIN
    PKG_GET_EMP_DETAILS.GET_DETAILS;
END;
/


-- 2. Create a procedure that fetches and displays employee details
--(EMPID, EMP_NAME, SALARY, DEPTNO) for employees who earn more than $55,000.

CREATE OR REPLACE PACKAGE PKG_GET_SALARY IS 
    CURSOR CUR_SALARY_DETAILS IS  SELECT EMPID,EMP_NAME,SALARY,DEPTNO FROM PACKAGE_EMPLOYEES WHERE SALARY > 55000;
    PROCEDURE GET_SALARY;
END;
/

CREATE OR REPLACE PACKAGE BODY PKG_GET_SALARY IS
V_EMP_SALARIES      PACKAGE_EMPLOYEES%ROWTYPE;
PROCEDURE GET_SALARY IS 
    BEGIN
       OPEN CUR_SALARY_DETAILS;
       DBMS_OUTPUT.PUT_LINE('EMPLOYEES  DETAILS WHOSE SALARY IS GREATED THAN 55000 ARE : ');
       LOOP
       FETCH CUR_SALARY_DETAILS INTO V_EMP_SALARIES ;
       EXIT WHEN CUR_SALARY_DETAILS%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE('EMP ID IS : ' || V_EMP_SALARIES.EMPID 
            || ' .EMP NAME IS : ' || V_EMP_SALARIES.EMP_NAME 
            || ' .SALARY IS : ' || V_EMP_SALARIES.SALARY 
            || ' .DEPT NO IS : ' || V_EMP_SALARIES.DEPTNO );
        END LOOP;
        CLOSE CUR_SALARY_DETAILS;
    EXCEPTION 
    WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('No employees got more tha 55000 salary !');
    end;
END;
/

BEGIN
    PKG_GET_SALARY.GET_SALARY;
END;
/



--3. Modify the package to add a cursor that only fetches employees from a 
-- specific department (for example, DEPTNO = 10). 
--Create a procedure to fetch and display employee details for this department.
CREATE OR REPLACE PACKAGE PKG_GET_DETAILS_BY_DEPT IS
PROCEDURE GET_EMP_DETAILS(P_DEPTNO IN NUMBER);

CURSOR CUR_DEPT_EMP_DETAILS(P_DEPTNO IN NUMBER) IS 
SELECT EMPID,EMP_NAME,LOCATION,DEPT_NAME,EMP.DEPTNO FROM 
PACKAGE_EMPLOYEES EMP INNER JOIN PACKAGE_DEPT DEPT ON EMP.DEPTNO=DEPT.DEPTNO
WHERE DEPT.DEPTNO=P_DEPTNO;

END;
/

CREATE OR REPLACE PACKAGE BODY PKG_GET_DETAILS_BY_DEPT IS
    V_EMPID_1        PACKAGE_EMPLOYEES.EMPID%TYPE;
    V_EMPNAME_1      PACKAGE_EMPLOYEES.EMP_NAME%TYPE;
    V_LOCATION_1     PACKAGE_DEPT.LOCATION%TYPE;
    V_DEPTNAME_1     PACKAGE_DEPT.DEPT_NAME%TYPE;
    V_DEPTNO_1       PACKAGE_EMPLOYEES.DEPTNO%TYPE;
    
    PROCEDURE GET_EMP_DETAILS(P_DEPTNO IN NUMBER) IS 
    BEGIN
        OPEN CUR_DEPT_EMP_DETAILS(P_DEPTNO);
        LOOP
            FETCH CUR_DEPT_EMP_DETAILS INTO V_EMPID_1,V_EMPNAME_1,V_LOCATION_1,V_DEPTNAME_1,V_DEPTNO_1;
            EXIT WHEN CUR_DEPT_EMP_DETAILS%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE('EMP ID IS : ' || V_EMPID_1 
            || ' .EMP NAME IS :'|| V_EMPNAME_1 
            || ' .LOCATION IS : ' || V_LOCATION_1
            || ' .DEPT NAME IS :' || V_DEPTNAME_1
            || ' .DEPT NO IS : ' || V_DEPTNO_1);
        END LOOP;
        CLOSE CUR_DEPT_EMP_DETAILS;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('NO DATA FOUND');
    END;
END;
/

BEGIN
    PKG_GET_DETAILS_BY_DEPT.GET_EMP_DETAILS(20);
END;
/

