-- This Workspace contains:
-- 1)  Insert a new record into employee table using procedure
-- 2)  Update the salary of an employee id : 101 to "75000", BY ADDING 25000rs Increment
-- 3)  Delete an employee's record from the table using their employee_id.
-- 4) Retrieve Employee Details using EMPLOYEE_ID
-- 5) CHECKING IF AN EXPLOYEEID EXISTS OR NOT IN EMPLOYEE TABLE.




SELECT * FROM EMPLOYEES;
DESC EMPLOYEES;

-- 1) Insert a new record into employee table using procedure
SET SERVEROUTPUT ON;
-- Header Section
CREATE OR REPLACE PROCEDURE INSERT_NEW_EMPLOYEE_DATA(
P_EMPID IN NUMBER,
P_EMP_NAME IN VARCHAR2,
P_SALARY IN NUMBER,
P_ADDRESS IN VARCHAR2,
P_MOBILE IN NUMBER,
P_DEPTNO IN NUMBER) IS
BEGIN
    INSERT INTO EMPLOYEES VALUES(P_EMPID,P_EMP_NAME,P_SALARY,P_ADDRESS,P_MOBILE,P_DEPTNO);
END;
/
-- Body Section
DECLARE 
V_EMPID         NUMBER  := 110;
V_EMP_NAME      VARCHAR2(255) := 'Jashwant';
V_SALARY        NUMBER := 28000;
V_ADDRESS       VARCHAR2(255) := 'noida';
V_MOBILE        NUMBER:=  923273453;
V_DEPTNO        NUMBER := 20;
BEGIN
     INSERT_NEW_EMPLOYEE_DATA(V_EMPID,V_EMP_NAME,V_SALARY,V_ADDRESS,V_MOBILE,V_DEPTNO);
     DBMS_OUTPUT.PUT_LINE('1 ROW UPDATED SUCCESFULLY ! Updated Row details are :');
     DBMS_OUTPUT.PUT_LINE('EMP ID IS : ' || V_EMPID || ' EMP NAME IS : ' || V_EMP_NAME);
END;
/




-- 2. Update the salary of an employee id : 101 to "50000", BY ADDING 25000rs Increment
-- PROCEDURE HEADER
CREATE OR REPLACE PROCEDURE UPDATE_SALARY(
P_EMPID IN NUMBER, 
P_EMP_NAME OUT VARCHAR2,
P_SALARY IN OUT NUMBER, 
P_DEPTNO OUT NUMBER) IS
BEGIN
UPDATE EMPLOYEES SET SALARY =SALARY + 50000 WHERE EMPID=P_EMPID;  --Updating the salary
--Retrieve the Updated Employee Details
SELECT EMP_NAME,SALARY,DEPTNO INTO P_EMP_NAME,P_SALARY,P_DEPTNO FROM EMPLOYEES WHERE EMPID=P_EMPID;
END;
/

--PROCEDURE BODY
DECLARE
V_EMPID         NUMBER:= 101;
V_EMP_NAME      EMPLOYEES.EMP_NAME%TYPE;
V_SALARY        EMPLOYEES.SALARY%TYPE;
V_DEPTNO        EMPLOYEES.DEPTNO%TYPE;
BEGIN
    UPDATE_SALARY(V_EMPID,V_EMP_NAME,V_SALARY,V_DEPTNO);  -- Calling the procedure
    --Printing the Details
    DBMS_OUTPUT.PUT_LINE('UPDATED SALARY FOR ' || V_EMPID || ' WHOSE NAME IS : ' || V_EMP_NAME || ' .UPDATED SALARY IS :' || V_SALARY || ' .DEPTNO IS :' || V_DEPTNO);
END;
/




-- Q3: Delete an employee's record from the table using their employee_id.
CREATE OR REPLACE PROCEDURE DELETE_EMPLOYEE_DATA(
P_EMPID_1 IN NUMBER,
P_EMPNAME_1 OUT VARCHAR2,
P_DEPTNO_1 OUT NUMBER) IS
BEGIN
--Retrieving and Displaying Details before deleting
    SELECT EMP_NAME,DEPTNO INTO P_EMPNAME_1,P_DEPTNO_1 FROM EMPLOYEES WHERE EMPID = P_EMPID_1;
    DELETE FROM EMPLOYEES WHERE EMPID=P_EMPID_1;  -- Deleting EMPID=110 Details.
END;
/

DECLARE
V_EMPID_1       NUMBER := 110;
V_EMPNAME_1     EMPLOYEES.EMP_NAME%TYPE;
V_DEPTNO_1      EMPLOYEES.DEPTNO%TYPE;
BEGIN
    DELETE_EMPLOYEE_DATA(V_EMPID_1,V_EMPNAME_1,V_DEPTNO_1);
    DBMS_OUTPUT.PUT_LINE('EMPLOYEE DETAILS DELETED FOR EMPID : ' || V_EMPID_1);
    DBMS_OUTPUT.PUT_LINE('EMPLOYEE DETAILS DELETED FOR EMP name is  : ' || V_EMPNAME_1 || ' .DEPT NO IS :' || V_DEPTNO_1 );
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No Data Found For this EMPID ' || V_EMPID_1);
END;
/


-- 4) Retrieve Employee Details using EMPLOYEE_ID
CREATE OR REPLACE PROCEDURE RETRIEVE_EMPLOYEE_DATA
(P_EMP_ID    IN   NUMBER,
P_EMP_NAME   OUT  VARCHAR2,
P_SALARY     OUT  NUMBER,
P_ADDRESS    OUT  VARCHAR2,
P_MOBILE     OUT  NUMBER,
P_DEPTNO     OUT  NUMBER
) IS
BEGIN
    SELECT EMP_NAME,SALARY,ADDRESS,MOBILE,DEPTNO INTO P_EMP_NAME,P_SALARY,P_ADDRESS, P_MOBILE,P_DEPTNO FROM EMPLOYEES WHERE EMPID=P_EMP_ID;
END;
/

DECLARE
V_EMPID     NUMBER := 101;
V_EMP_NAME  EMPLOYEES.EMP_NAME%TYPE;
V_SALARY    EMPLOYEES.SALARY%TYPE;
V_ADDRESS   EMPLOYEES.ADDRESS%TYPE;
V_MOBILE    EMPLOYEES.MOBILE%TYPE;
V_DEPTNO    EMPLOYEES.DEPTNO%TYPE;
BEGIN 
    RETRIEVE_EMPLOYEE_DATA(V_EMPID,V_EMP_NAME,V_SALARY,V_ADDRESS,V_MOBILE,V_DEPTNO);
    DBMS_OUTPUT.PUT_LINE('Retrieving Details of EMP ID : ' || V_EMPID);
    DBMS_OUTPUT.PUT_LINE('EMP NAME IS ' || V_EMP_NAME || ' SALARY IS : ' || V_SALARY || ' ADDRESS IS : ' || V_ADDRESS || ' MOBILE NUMBER IS :' || V_MOBILE || ' DEPTNO IS : '|| V_DEPTNO);
END;
/








-- 5. CHECKING IF AN EXPLOYEEID EXISTS OR NOT IN EMPLOYEE TABLE.
CREATE OR REPLACE PROCEDURE CHECK_EXISTANCE_DATA (
P_EMPID_2 IN NUMBER,
P_EXISTS OUT VARCHAR2)
IS
V_COUNT NUMBER;
BEGIN
    SELECT COUNT(*) INTO V_COUNT FROM EMPLOYEES WHERE EMPID=P_EMPID_2;
    
    IF V_COUNT > 0 THEN 
        P_EXISTS := 'YES';
    ELSE
        P_EXISTS := 'NO';
    END IF;
END;
/

DECLARE
V_EMPID_2       NUMBER := 105;
V_EXISTS        VARCHAR2(10);
BEGIN
    CHECK_EXISTANCE_DATA(V_EMPID_2,V_EXISTS);
    
    IF V_EXISTS = 'YES' THEN
        DBMS_OUTPUT.PUT_LINE('EMPLOYEE ID ' || V_EMPID_2 || ' EXISTS.');
    ELSE
        DBMS_OUTPUT.PUT_LINE('EMPLOYEE ID ' || V_EMPID_2 || ' NOT EXISTS.');
    END IF;
END;
/





